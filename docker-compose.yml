version: '3'

services:

  # -----------
  # ZOOKEEPER
  # -----------
  zoo-ed:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo-ed
    container_name: zoo-ed
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo-ed:2888:3888

  # -----------
  # KAFKA
  # -----------
  kafka-ed:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka-ed
    container_name: kafka-ed
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-ed:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo-ed:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo-ed

  # -----------------------
  # KAFKA SCHEMA REGISTRY
  # -----------------------
  kafka-schema-registry-ed:
    image: confluentinc/cp-schema-registry:7.3.2
    hostname: kafka-schema-registry-ed
    container_name: kafka-schema-registry-ed
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-ed:19092
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry-ed
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    depends_on:
      - zoo-ed
      - kafka-ed

  # -----------------------
  # KAFKA REST PROXY
  # -----------------------
  kafka-rest-proxy-ed:
    image: confluentinc/cp-kafka-rest:7.3.2
    hostname: kafka-rest-proxy-ed
    container_name: kafka-rest-proxy-ed
    ports:
      - "8082:8082"
    environment:
      # KAFKA_REST_ZOOKEEPER_CONNECT: zoo-ed:2181
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-schema-registry-ed:8081/
      KAFKA_REST_HOST_NAME: kafka-rest-proxy-ed
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-ed:19092
    depends_on:
      - zoo-ed
      - kafka-ed
      - kafka-schema-registry-ed

  # -----------------------
  # KAFKA CONNECT
  # -----------------------
  kafka-connect-ed:
    image: confluentinc/cp-kafka-connect:7.3.2
    hostname: kafka-connect-ed
    container_name: kafka-connect-ed
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka-ed:19092"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://kafka-schema-registry-ed:8081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://kafka-schema-registry-ed:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect-ed"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: '/usr/share/java,/etc/kafka-connect/jars,/usr/share/confluent-hub-components'
    volumes:
      - ./data/connectors:/etc/kafka-connect/jars/
    depends_on:
      - zoo-ed
      - kafka-ed
      - kafka-schema-registry-ed
      - kafka-rest-proxy-ed
    command:
      - bash
      - -c
      - |
        confluent-hub install --no-prompt debezium/debezium-connector-mysql:latest
        confluent-hub install --no-prompt confluentinc/kafka-connect-datagen:0.4.0
        /etc/confluent/docker/run

  # -----------------------
  # KAFKA UI
  # -----------------------
  kafka_ui-ed:
    image: provectuslabs/kafka-ui
    hostname: kafka_ui-ed
    container_name: kafka_ui-ed
    restart: always
    ports:
      - '7000:8080'
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-ed:29092
      KAFKA_BROKERCONNECT: kafka-ed:29092
    depends_on:
      - kafka-ed
      - zoo-ed

  postgres-ed:
    image: postgres:latest
    container_name: postgres-ed
    restart: always
    environment:
      - POSTGRES_USER=event_driven
      - POSTGRES_PASSWORD=event_driven
      - POSTGRES_DB=event_driven
      - SCHEMA=event_driven
    ports:
      - "5432:5432"
    volumes:
      - ./data/db_data_parking:/var/lib/postgresql/data


